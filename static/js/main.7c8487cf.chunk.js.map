{"version":3,"sources":["pages/ConnectWallet.tsx","components/TextField.tsx","pages/SwapWncg.tsx","App.tsx","index.tsx"],"names":["ConnectWalletPage","connect","style","margin","onClick","TextField","onChange","label","others","labelLeft","event","undefined","target","value","SwapWncgPage","address","chain","useNetwork","contractAddress","useMemo","id","mainnet","ropsten","goerli","useBalance","addressOrName","token","data","isLoading","error","signer","useSigner","contract","useContract","contractInterface","erc20ABI","signerOrProvider","useState","ncAddress","setNcAddress","amount","setAmount","burnAmount","Decimal","mul","pow","minWidth","overflow","justify","span","weight","toString","div","decimals","message","indexOf","isAddress","currentTarget","preventDefault","console","log","_to","slice","padEnd","burn","BigNumber","from","then","debug","App","useAccount","isConnected","useConnect","connector","InjectedConnector","SwapWncg","ConnectWallet","client","createClient","autoConnect","provider","config","getDefaultProvider","chainId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAuBeA,EAhB6C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3D,OACI,eAAC,IAAD,CAAWC,MAAO,CAACC,OAAQ,aAA3B,UACI,cAAC,IAAD,UACI,8DAEJ,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAQC,QAAS,kBAAMH,KAAvB,kC,yFCNHI,EAAsC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAUC,EAAa,oCACnF,OACI,8BACI,cAAC,IAAD,aAAOC,UAAWF,EAAOD,SAAU,SAAAI,QAA4BC,IAAbL,GAAwBA,EAASI,EAAME,OAAOC,SAAcL,O,SCsH3GM,EA/GmC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3CC,EAAUC,cAAVD,MAEFE,EAAkBC,mBAAgB,WACtC,OAAS,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOI,MAAOC,IAAQD,GACjB,8CACO,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOI,MAAOE,IAAQF,GACxB,8CACO,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOI,MAAOG,IAAOH,GACvB,6CAGA,+CAER,CAACJ,IAd6D,EAgB9BQ,YAAW,CAC5CC,cAAeV,EACfW,MAAOR,IAFDS,EAhByD,EAgBzDA,KAAMC,EAhBmD,EAgBnDA,UAAWC,EAhBwC,EAgBxCA,MAKXC,EAAWC,cAAjBJ,KACFK,EAAWC,YAAY,CAC3BR,cAAeP,EACfgB,kBAAkB,CAChB,oDADe,mBAEZC,MAELC,iBAAkBN,IA5B6C,EA+B/BO,mBAAiB,IA/Bc,mBA+B1DC,EA/B0D,KA+B/CC,EA/B+C,OAgCrCF,mBAAiB,KAhCoB,mBAgC1DG,EAhC0D,KAgClDC,EAhCkD,KAiC3DC,EAAavB,mBAAwB,WACzC,IACE,OAAO,IAAIwB,IAAQH,GAAU,KAAKI,IAAI,IAAID,IAAQ,IAAIE,IAAI,KAC1D,SACA,OAAO,QAER,CAACL,IAEJ,OACE,eAAC,IAAD,CACEtC,MAAO,CACLC,OAAQ,SACR2C,SAAU,OACVC,SAAU,UAJd,UAOE,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACE,eAAC,IAAD,yBACc,IACXpB,EACC,cAAC,IAAD,CAAMqB,MAAM,EAAZ,0BAEA,cAAC,IAAD,CAAMC,OAAO,OAAOD,MAAM,EAA1B,cACYtC,IAATgB,EACG,IAAIgB,IAAQhB,EAAKd,MAAMsC,YACpBC,IAAI,IAAIT,IAAQ,IAAIE,IAAIlB,EAAK0B,WAC7BF,WAHN,OAIGtB,QAJH,IAIGA,OAJH,EAIGA,EAAOyB,eAKnB,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAKN,QAAQ,SAAb,SACE,cAAC,EAAD,CAAWzC,MAAO,KAAMD,SAAUiC,MAEpC,cAAC,IAAD,IACA,cAAC,IAAD,CAAKS,QAAQ,SAAb,SACE,cAAC,EAAD,CAAWzC,MAAO,SAAUD,SAAUmC,MAExC,cAAC,IAAD,IACA,cAAC,IAAD,CAAKO,QAAQ,SAAb,SACgB,OAAbhB,GACc,OAAfU,IACwC,IAAxCA,EAAWS,WAAWI,QAAQ,MAC7BC,oBAAUlB,GAGT,cAAC,IAAD,CACElC,QAAS,SAACM,GACR,QAA4BC,IAAxBD,EAAM+C,cAAV,CACA/C,EAAMgD,iBACNC,QAAQC,IAAI5B,GASZ,IACM6B,GADW,iBACOvB,EAAUwB,MAAM,IAAIC,OAAO,GAAI,KAEvD/B,EACGgC,KAAKC,IAAUC,KAAKxB,EAAWS,YAAaU,GAC5CM,KAAKR,QAAQS,SAlBpB,kBAFA,cAAC,IAAD,CAAMlB,OAAQ,OAAd,sCCvEKmB,MAvBf,WAAgB,IAAD,EACoBC,cAAzBvD,EADK,EACLA,QAASwD,EADJ,EACIA,YACTtE,EAAYuE,YAAW,CAC7BC,UAAW,IAAIC,MADTzE,QAIR,OAAKsE,OAMW5D,IAAZI,EAEA,uEAKF,cAAC4D,EAAD,CAAc5D,QAASA,IAXrB,cAAC6D,EAAD,CAAmB3E,QAASA,KCN5B4E,EAASC,YAAa,CAC1BC,aAAa,EACbC,SAAU,SAAAC,GAAM,OAAIC,6BAAmBD,EAAOE,YAGhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAaT,OAAQA,EAArB,SACE,cAAC,EAAD,UAINU,SAASC,eAAe,W","file":"static/js/main.7c8487cf.chunk.js","sourcesContent":["import { Button, Container, Row, Spacer } from \"@nextui-org/react\";\nimport React from \"react\"\n\ninterface ConnectWalletPageProps {\n    connect: () => void;\n}\n\nconst ConnectWalletPage: React.FC<ConnectWalletPageProps> = ({ connect }) => {\n    return (\n        <Container style={{margin: \"10vh 10vw\"}}>\n            <Row>\n                <h1>MetaMask is not connected.</h1>\n            </Row>\n            <Spacer/>\n            <Row>\n                <Button onClick={() => connect()}>\n                    Connect Wallet\n                </Button>\n            </Row>\n        </Container>\n    );\n}\n\nexport default ConnectWalletPage;\n","import { Input } from \"@nextui-org/react\";\n\nexport interface TextInputProps {\n    onChange?: (value: string) => void,\n    value?: string,\n    label: string,\n    readOnly?: boolean,\n}\n\nexport const TextField: React.FC<TextInputProps> = ({ onChange, label, ...others }) => {\n    return (\n        <div>\n            <Input labelLeft={label} onChange={event => { if (onChange !== undefined) onChange(event.target.value) }} {...others} />\n        </div>\n    )\n}\n","import { Button, Container, Row, Spacer, Text } from \"@nextui-org/react\";\nimport Decimal from \"decimal.js\";\nimport { BigNumber } from \"ethers\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { useState, useMemo } from \"react\";\nimport {\n  erc20ABI,\n  useBalance,\n  useContract,\n  useNetwork,\n  useSigner,\n} from \"wagmi\";\nimport { TextField } from \"../components/TextField\";\nimport { mainnet, ropsten, goerli } from \"wagmi/chains\";\n\ninterface SwapWncgPageProps {\n  address: string;\n}\n\nconst SwapWncgPage: React.FC<SwapWncgPageProps> = ({ address }) => {\n  const { chain } = useNetwork();\n\n  const contractAddress = useMemo<string>(() => {\n    if (chain?.id === mainnet.id) {\n      return \"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817\";\n    } else if (chain?.id === ropsten.id) {\n      return \"0xeaa982f3424338598738c496153e55b1df11f625\";\n    } else if (chain?.id === goerli.id) {\n      return \"0x847933319010F86aa8294904da3A295bdAb6D540\";\n      // return \"0xe74aa16cb9F713F58D7c86f0e413712D4220Bc05\";\n    } else {\n      return \"0xad84431776e966400a8aecaf7bd2316a69c54efe\";\n    }\n  }, [chain]);\n\n  const { data, isLoading, error } = useBalance({\n    addressOrName: address,\n    token: contractAddress,\n  });\n\n  const { data: signer } = useSigner();\n  const contract = useContract({\n    addressOrName: contractAddress,\n    contractInterface: [\n      \"function burn(uint256 amount, bytes32 to) public\",\n      ...erc20ABI,\n    ],\n    signerOrProvider: signer,\n  });\n\n  const [ncAddress, setNcAddress] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"0\");\n  const burnAmount = useMemo<Decimal | null>(() => {\n    try {\n      return new Decimal(amount || \"0\").mul(new Decimal(10).pow(18));\n    } catch {\n      return null;\n    }\n  }, [amount]);\n\n  return (\n    <Container\n      style={{\n        margin: \"30vh 0\",\n        minWidth: \"100%\",\n        overflow: \"hidden\",\n      }}\n    >\n      <Row justify=\"center\">\n        <Text>\n          Your wNCG :{\" \"}\n          {isLoading ? (\n            <Text span={true}>ðŸ•‘</Text>\n          ) : (\n            <Text weight=\"bold\" span={true}>\n              {data !== undefined\n                ? new Decimal(data.value.toString())\n                    .div(new Decimal(10).pow(data.decimals))\n                    .toString()\n                : error?.message}\n            </Text>\n          )}\n        </Text>\n      </Row>\n      <Spacer />\n      <Spacer />\n      <Row justify=\"center\">\n        <TextField label={\"To\"} onChange={setNcAddress} />\n      </Row>\n      <Spacer />\n      <Row justify=\"center\">\n        <TextField label={\"Amount\"} onChange={setAmount} />\n      </Row>\n      <Spacer />\n      <Row justify=\"center\">\n        {contract === null ||\n        burnAmount === null ||\n        burnAmount.toString().indexOf(\".\") !== -1 ||\n        !isAddress(ncAddress) ? (\n          <Text weight={\"bold\"}>Fill corret values</Text>\n        ) : (\n          <Button\n            onClick={(event) => {\n              if (event.currentTarget === undefined) return;\n              event.preventDefault();\n              console.log(contract);\n\n              // const planetId = \"0x100000000001\";\n              // 0x100000000000\n              /**\n               * Planet-Ids\n               * ODIN ( Internal ) : \"0x100000000000\"\n               * HEIMDALL ( Internal ) : \" 0x100000000001\"\n               */\n              const planetId = \"0x100000000001\";\n              const _to = (planetId + ncAddress.slice(2)).padEnd(66, \"0\");\n\n              contract\n                .burn(BigNumber.from(burnAmount.toString()), _to)\n                .then(console.debug);\n            }}\n          >\n            Burn\n          </Button>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default SwapWncgPage;\n","import { useAccount, useConnect } from 'wagmi';\nimport { InjectedConnector } from 'wagmi/connectors/injected'\nimport ConnectWalletPage from './pages/ConnectWallet';\nimport SwapWncgPage from './pages/SwapWncg';\n\nfunction App() {\n  const { address, isConnected } = useAccount();\n  const { connect } = useConnect({\n    connector: new InjectedConnector(),\n  });\n\n  if (!isConnected) {    \n    return (\n      <ConnectWalletPage connect={connect} />\n    );\n  }\n\n  if (address === undefined) {\n    return (\n      <b>Error occurred while fetching address.</b>\n    )\n  }\n\n  return (\n    <SwapWncgPage address={address} />\n  )\n}\n\nexport default App;\n","import { NextUIProvider } from '@nextui-org/react';\nimport { getDefaultProvider } from 'ethers';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createClient, WagmiConfig } from 'wagmi';\nimport App from './App';\n\nconst client = createClient({\n  autoConnect: true,\n  provider: config => getDefaultProvider(config.chainId),\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <NextUIProvider>\n      <WagmiConfig client={client}>\n        <App />\n      </WagmiConfig>\n    </NextUIProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}